PANGOLIN_URL=https://api.url.of.your.pangolin.instance
RESOURCE_IDS="2,7,12" # comma-separated list of resource IDs to be updated. Run the container once to see the list of available resource IDs.
ORG_ID=your_org_id # your organization ID in pangolin
PANGOLIN_TOKEN=your_pangolin_api_token # see pangolin-api-key-permissions.png for needed permissions

RETENTION_MINUTES=1440   # IP's will stay for 1440 minutes = 1 day in the allowlist after their last call
CLEANUP_INTERVAL_MINUTES=60   # how often to clean up the state file with expired IP's'

# REQUIRED: Configure a custom header in the Pangolin resource that fronts this service.
# Only requests containing this exact header key/value are accepted.
# Example in Pangolin resource configuration:
#   my_secret_header_key: my_secret_value123
# Then set these environment variables (must be non-empty):
#   EXPECTED_PANGOLIN_CUSTOM_HEADER_KEY=my_secret_header_key
#   EXPECTED_PANGOLIN_CUSTOM_HEADER_VALUE=my_secret_value123

EXPECTED_PANGOLIN_CUSTOM_HEADER_KEY=my_secret_header_key
EXPECTED_PANGOLIN_CUSTOM_HEADER_VALUE=my_secret_value123

# Optional: CrowdSec integration (runs cscli on the same Docker host)
# Enable to also add/remove IPs to/from a CrowdSec allowlist when seen/expired here.
# If CrowdSec runs in a container, set CROWDSEC_CMD_PREFIX to e.g. "docker exec crowdsec"
# and ensure this container can run that command (mount Docker socket or run on host).
CROWDSEC_ENABLED=false
CROWDSEC_ALLOWLIST_NAME=pangolin-ip-rule-manager
CROWDSEC_CSCLI_BIN=cscli
CROWDSEC_CMD_PREFIX=docker exec crowdsec
CROWDSEC_CACHE_TTL_SECONDS=3600

# Optional: enable the /update?ip=... endpoint that allows whitelisting arbitrary IPs
# via the same Pangolin custom header gate. Default disabled for safety.
# When enabled, a GET /update?ip=1.2.3.4 will act as if that IP called the beacon,
# i.e. it will be added/updated in Pangolin and (if enabled) in CrowdSec and tracked
# with the same retention policy.
UPDATE_ENDPOINT_ENABLED=false
